---
name: CI

on:
  push:
    # branches: [ "main", "feat/*", "release/*" ]
    branches-ignore:
      - dependabot/**
  pull_request:
    # branches: [ "main", "feat/*", "release/*" ]
    branches-ignore:
      - dependabot/**
  schedule:
    - cron: '0 2 * * 1' # https://crontab.guru/#0_2_*_*_1

permissions:
  contents: read

jobs:
  lint-yaml:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run yamllint
        uses: ibiqlik/action-yamllint@v3

  lint-folders:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run folderslint in container
        run: docker run -i --rm --volume "$(pwd):$(pwd)" --workdir "$(pwd)" sommerfeldio/folderslint:latest folderslint
        shell: bash

  lint-filenames:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run ls-lint in container
        run: docker run -i --rm --volume "$(pwd):/data" --workdir "/data" lslintorg/ls-lint:1.11.0
        shell: bash

  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@2.0.0
        with:
          ignore_paths: node_modules target

  lint-dockerfile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: src/main/Dockerfile

  ci:
    runs-on: ubuntu-latest
    needs: lint-dockerfile
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker image build
        uses: docker/build-push-action@v4
        with:
          context: ./src/main
          platforms: linux/amd64
          push: false

  on-failure:
    runs-on: ubuntu-latest
    needs: ['ci', 'lint-yaml', 'lint-folders', 'lint-filenames', 'shellcheck', 'lint-dockerfile']
    if: failure()

    steps:
      - name: Send Pipeline Status to Google Chat
        if: always()
        uses: Co-qn/google-chat-notification@releases/v1
        with:
          name: ${{ github.workflow }}
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
          status: failure
